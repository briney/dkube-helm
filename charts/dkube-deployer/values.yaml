# Default values for dkube-deployer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

dkube:
  required:
    # Choose one of dkube/gke/okd/eks/ntnx
    kubeProvider: "dkube"
    # When HA=true k8s cluster must have min 3 schedulable nodes
    ha: "false"
    # Operator's Local Sign In Details
    # Username cannot be same as that of a namespace's name.
    # Also, following names are restricted- dkube, monitoring, kubeflow
    # Password must be 8 - 20 character long AlphaNumeric string with atleat 1 special character
    # '$' is not supported
    username: ""
    password: ""
  nodeAffinity:
    # Nodes identified by labels on which the dkube pods must be scheduled.. Say management nodes. Unfilled means no binding. When filled there needs to be minimum of 3nodes in case of HA and one node in case of non-HA
    # Example: DKUBE_NODES_LABEL: key1=value1
    dkubeNodesLabel: ""
    # Nodes to be tolerated by dkube control plane pods so that only they can be scheduled on the nodes
    # Example: DKUBE_NODES_TAINTS: key1=value1:NoSchedule,key2=value2:NoSchedule
    dkubeNodesTaints: ""
    # Taints of the nodes where gpu workloads must be scheduled.
    # Example: GPU_WORKLOADS_TAINTS: key1=value1:NoSchedule,key2=value2:NoSchedule
    gpuWorkloadTaints: ""
    # Taints of the nodes where production workloads must be scheduled.
    # Example: PRODUCTION_WORKLOADS_TAINTS: key1=value1:NoSchedule,key2=value2:NoSchedule
    productionWorkloadTaints: ""
  optional:
    # version of dkube installer to be used
    dkubeInstallerVersion: "2.1.6.10"
    # version of dkube to be installed
    dkubeVersion: "2.1.6.10"
    # Dockerhub Secrets for OCDR images
    # If you don't create, this will be auto-created with default values.
    dkubeDockerhubCredentialsSecret: "dkube-dockerhub-secret"
    # TLS Secret of Operator's Certificate & Private Key
    # If you don't create, place your certificate and private key in $HOME/.dkube
    dkubeOperatorCertificate: ""
    # Repository from where Dkube images can be picked.
    # Format: registry/[repo]
    dkubeRegistry: "docker.io/ocdr"
    # Container registry username
    dkubeRegistryUname: "lucifer001"
    # Container registry password
    dkubeRegistryPasswd: "lucifer@dkube"
    # AWS IAM role
    # Valid only if KUBE_PROVIDER=eks
    # This will be set as an annotation in few deployments
    # Format should be like:
    # IAMRole: "<key>: <iam role>"
    # eg: IAMRole: "iam.amazonaws.com/role: arn:aws:iam::123456789012:role/myrole"
    IAMRole: ""
  external:
    # Type of dkube proxy service, possible values are nodeport and loadbalancer
    # Please use loadbalancer if kubeProvider is gke.
    access: "nodeport"
    # 'true' - to install MetalLB Loadbalancer
    # Must fill LB_VIP_POOL if true
    installLoadbalancer: "false"
    # Only CIDR notation is allowed. E.g: 192.168.2.0/24
    # Valid only if installLoadbalancer is true
    LBVipPool: ""
  storage:
    # Type of storage
    # Possible values: disk, pv, sc, nfs
    # Following are required fields for corresponding storage type
    #    -------------------------------------------------------
    #    STORAGE_TYPE    REQUIRED_FIELDS
    #    -------------------------------------------------------
    #    disk            STORAGE_DISK_NODE and STORAGE_DISK_PATH
    #    pv              STORAGE_PV
    #    sc              STORAGE_SC
    #    nfs             STORAGE_NFS_SERVER and STORAGE_NFS_PATH
    #    ceph            STORAGE_CEPH_MONITORS and STORAGE_CEPH_SECRET
    storageType: "disk"
    # Localpath on the storage node
    storageDiskPath: "/var/dkube"
    # Nodename of the storage node
    # Possible values: AUTO/<nodename>
    # AUTO - Master node will be chosen for storage if KUBE_PROVIDER=dkube
    storageDiskNode: "AUTO"
    # Name of persistent volume
    storagePV: ""
    # Name of storage class name
    # Make sure dynamic provisioner is running for the storage class name
    storageSC: ""
    # NFS server ip
    storageNFSServer: ""
    # NFS path (Make sure the path exists)
    storageNFSPath: ""
    # Comma separated IPs of ceph monitors
    storageCEPHMonitors: ""
    # Ceph secret
    storageCEPHSecret: ""
    # Ceph data and configuration path for internal ceph
    # Internal ceph is installed when HA=true and STORAGE_TYPE is not in ("nfs", "ceph")
    storageCEPHPath: "/var/lib/rook"
  CICD:
    #To enable tekton cicd with dkube. (true / false)
    enabled: "false"
    #Docker registry where CICD built images will be saved.
    dockerRegistry: "docker.io/ocdr"
    registryUsername: ""
    registryPassword: ""
    #For AWS ECR on EKS K8S cluster, enter registry as aws_account_id.dkr.ecr.region.amazonaws.com.
    #dockerRegsitry: "aws_account_id.dkr.ecr.region.amazonaws.com"
    #Worker nodes should either have AmazonEC2ContainerRegistryFullAccess or if you are using KIAM
    #based IAM control, provide an IAM role which has AmazonEC2ContainerRegistryFullAccess
    #IAMRole: "arn:aws:iam::<aws_account_id>:role/<iam-role>"
    IAMRole: ""
  modelCatalog:
    #To enable model catalog with dkube. (true / false)
    enabled: "true"

imagePullSecrets: dkube-dockerhub-secret
wipedata: "yes"
